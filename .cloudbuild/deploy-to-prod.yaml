steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: trigger-deployment
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "$_SERVICE_NAME"
      # Deploy the specific image that was built and tested in the staging pipeline
      - "--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO_NAME/$_SERVICE_NAME:$SHORT_SHA"
      - "--region=$_REGION"
      - "--project=$_PROD_PROJECT_ID"
      - '--max-instances=$_MAX_INSTANCES'
      - '--cpu-boost'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$_PROD_PROJECT_ID,GOOGLE_CLOUD_REGION=$_REGION,LOG_LEVEL=$_LOG_LEVEL,APP_NAME=$_APP_NAME,AGENT_NAME=$_AGENT_NAME,GOOGLE_GENAI_USE_VERTEXAI=$_GOOGLE_GENAI_USE_VERTEXAI,MODEL=$_MODEL,AUTH_REQUIRED=$_AUTH_REQUIRED,RATE_LIMIT=$_RATE_LIMIT'
      - '--service-account=$_SERVICE_NAME-app-sa@$_PROD_PROJECT_ID.iam.gserviceaccount.com'
      - '--allow-unauthenticated' # Allow unauthenticated invocations - end user will perform OAuth

substitutions:
  _PROD_PROJECT_ID: YOUR_PROD_PROJECT_ID
  _REGION: europe-west4
  _ARTIFACT_REPO_NAME: rickbot-adk
  _SERVICE_NAME: rickbot-adk
  _APP_NAME: rickbot_st_ui
  _AGENT_NAME: rickbot_agent
  _LOG_LEVEL: INFO
  _GOOGLE_GENAI_USE_VERTEXAI: "True"
  _MODEL: "gemini-2.5-flash"
  _AUTH_REQUIRED: "True"
  _RATE_LIMIT: "120"
  _MAX_INSTANCES: "1"

logsBucket: gs://${PROJECT_ID}-logs-data/build-logs
options:
  substitutionOption: ALLOW_LOOSE
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
