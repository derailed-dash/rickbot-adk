[project]
name = "rickbot-adk"
version = "0.1.0"
description = "A multi-personality AI chatbot built using Google Gemini and ADK"
authors = [
    {name = "Dazbo (Darren Lester)", email = "derailed.dash@gmail.com"},
]
dependencies = [
    "google-adk~=1.8.0",
    "opentelemetry-exporter-gcp-trace~=1.9.0",
    "google-cloud-logging~=3.11.4",
    "google-cloud-aiplatform[evaluation]~=1.106.0",
    "google-cloud-secret-manager",
    # Web framework
    "fastapi~=0.115.8",
    "uvicorn~=0.34.0",    
    "pyyaml>=6.0.2",
    # Frontend
    "streamlit",
    "python-dotenv",
    "psycopg2-binary>=2.9.10",
    # Required for the sample Streamlit UI from agent-starter-pack
    "langchain",
    "langchain-core",
    "streamlit-feedback",
    "langchain-google-vertexai",
]

requires-python = ">=3.10,<3.13"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.8",
    "nest-asyncio>=1.6.0",
]

[project.optional-dependencies]

jupyter = [
    "jupyter~=1.0.0",
    "ipython>=8.37.0"
]
lint = [
    "ruff>=0.4.6",
    "mypy~=1.15.0",
    "codespell~=2.2.0",
    "types-pyyaml~=6.0.12.20240917",
    "types-requests~=2.32.0.20240914",
]
load-test = [
    "locust==2.31.1",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "C",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP", # pyupgrade
    "RUF", # ruff specific rules
]
ignore = ["E501", "C901"] # ignore line too long, too complex

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_subclassing_any = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
follow_imports = "silent"
ignore_missing_imports = true
explicit_package_bases = true
disable_error_code = ["misc", "no-untyped-call", "no-any-return"]

exclude = [".venv"]

[tool.codespell]
ignore-words-list = "rouge"
skip = "./locust_env/*,uv.lock,.venv,./src/frontend,**/*.ipynb"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
pythonpath = "."
asyncio_default_fixture_loop_scope = "function"

[tool.hatch.build.targets.wheel]
packages = ["src/adk_sample_app", "src/frontend"]
